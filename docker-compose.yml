version: '3.8'

services:
  # API Server
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fingrow-api
    ports:
      - "5050:5050"  # Main API server
      - "8080:8080"  # SQLite GUI (accessible via /db-gui proxy)
    environment:
      - NODE_ENV=development
      - PORT=5050
      - DATABASE_PATH=/app/data/fingrow.db
      - ENABLE_DB_GUI=true  # Enable SQLite GUI (set to 'false' to disable)
    volumes:
      # Mount source code for hot reloading in development
      - ./admin:/app/admin:ro
      - ./mobile:/app/mobile:ro
      - ./components:/app/components:ro
      - ./services:/app/services:ro
      - ./database:/app/database:ro
      - ./scripts:/app/scripts:ro
      - ./server.js:/app/server.js:ro
      - ./App.js:/app/App.js:ro
      - ./index.html:/app/index.html:ro
      - ./db-query.html:/app/db-query.html:ro
      - ./version-footer.js:/app/version-footer.js:ro
      
      # Persist data and uploads
      - ./data:/app/data
      - ./uploads:/app/uploads
      
      # Exclude node_modules from host
      - /app/node_modules
    networks:
      - fingrow-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5050/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1); });"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy (optional, for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: fingrow-nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - api
    networks:
      - fingrow-network

  # Note: Database GUI is now built-in (accessible via /db-gui/home)
  # The adminer service has been replaced with sqlite-gui-node
  # Access at: http://localhost:5050/db-gui/home or http://localhost:8080/home

networks:
  fingrow-network:
    driver: bridge

volumes:
  data:
  uploads: