// Create reviews for all completed orders
import Database from 'better-sqlite3';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
const projectRoot = dirname(__dirname);
const dbPath = join(projectRoot, 'data', 'fingrow.db');

const db = new Database(dbPath);

// Review templates for different ratings
const reviewTemplates = {
    5: {
        titles: [
            '‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡πÜ ‡∏õ‡∏£‡∏∞‡∏ó‡∏±‡∏ö‡πÉ‡∏à‡∏°‡∏≤‡∏Å!',
            '‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏î‡∏µ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏° ‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÇ‡∏Ü‡∏©‡∏ì‡∏≤',
            '‡∏Ç‡∏≠‡∏á‡∏î‡∏µ‡∏°‡∏≤‡∏Å ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö',
            '‡∏û‡∏≠‡πÉ‡∏à‡∏°‡∏≤‡∏Å‡πÜ ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏Å‡πÜ',
            '‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏î‡∏µ ‡∏™‡πà‡∏á‡πÑ‡∏ß‡∏°‡∏≤‡∏Å'
        ],
        comments: [
            '‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏†‡∏≤‡∏û‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡πÜ ‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏ó‡∏Ñ‡∏∏‡∏¢‡πÑ‡∏ß‡πâ ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡πÉ‡∏à‡∏î‡∏µ ‡∏ï‡∏≠‡∏ö‡πÄ‡∏£‡πá‡∏ß ‡∏™‡πà‡∏á‡πÑ‡∏ß‡∏°‡∏≤‡∏Å ‡πÅ‡∏û‡πá‡∏Ñ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡∏Ñ‡∏£‡∏±‡∏ö ‡∏õ‡∏£‡∏∞‡∏ó‡∏±‡∏ö‡πÉ‡∏à‡∏°‡∏≤‡∏Å‡πÜ ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏Å‡∏Ñ‡∏£‡∏±‡∏ö',
            '‡∏Ç‡∏≠‡∏á‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡∏Ñ‡∏£‡∏±‡∏ö ‡∏™‡∏†‡∏≤‡∏û‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏µ ‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß ‡πÅ‡∏û‡πá‡∏Ñ‡∏Ç‡∏≠‡∏á‡∏î‡∏µ ‡∏™‡πà‡∏á‡πÑ‡∏ß‡∏°‡∏≤‡∏Å ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö',
            '‡πÑ‡∏î‡πâ‡∏Ç‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö ‡∏™‡∏†‡∏≤‡∏û‡∏î‡∏µ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡πÄ‡∏•‡∏¢ ‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÑ‡∏ß‡πâ ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏°‡∏≤‡∏Å ‡πÅ‡∏ä‡∏ó‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡∏™‡πà‡∏á‡πÄ‡∏£‡πá‡∏ß‡∏°‡∏≤‡∏Å ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏Å‡∏Ñ‡∏£‡∏±‡∏ö',
            '‡∏û‡∏≠‡πÉ‡∏à‡∏°‡∏≤‡∏Å‡πÜ ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà‡∏°‡∏≤‡∏Å ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏î‡∏µ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏≠‡∏∞‡πÑ‡∏£ ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡∏î‡∏π‡πÅ‡∏•‡∏î‡∏µ‡∏°‡∏≤‡∏Å ‡πÅ‡∏û‡πá‡∏Ñ‡∏î‡∏µ ‡∏™‡πà‡∏á‡πÑ‡∏ß ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏Å‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö',
            '‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏î‡∏µ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏° ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏î‡∏µ ‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏¢ ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏î‡∏µ‡∏°‡∏≤‡∏Å ‡∏ï‡∏≠‡∏ö‡πÄ‡∏£‡πá‡∏ß ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î ‡∏™‡πà‡∏á‡πÑ‡∏ß‡∏°‡∏≤‡∏Å‡πÜ ‡∏Ñ‡∏£‡∏±‡∏ö'
        ]
    },
    4: {
        titles: [
            '‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡πÇ‡∏≠‡πÄ‡∏Ñ‡∏°‡∏≤‡∏Å',
            '‡∏û‡∏≠‡πÉ‡∏à‡∏Ñ‡∏£‡∏±‡∏ö ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏î‡∏µ',
            '‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÑ‡∏î‡πâ',
            '‡πÇ‡∏≠‡πÄ‡∏Ñ‡∏°‡∏≤‡∏Å‡∏Ñ‡∏£‡∏±‡∏ö ‡∏Ç‡∏≠‡∏á‡∏î‡∏µ',
            '‡∏û‡∏≠‡πÉ‡∏à‡∏Ñ‡∏£‡∏±‡∏ö ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏î‡∏µ'
        ],
        comments: [
            '‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÇ‡∏≠‡πÄ‡∏Ñ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏Å‡πÑ‡∏ß‡πâ ‡∏°‡∏µ‡∏£‡∏≠‡∏¢‡∏ô‡∏¥‡∏î‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏¢‡∏∏‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡πÅ‡∏ï‡πà‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡πÉ‡∏à‡∏î‡∏µ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏£‡∏±‡∏ö',
            '‡∏Ç‡∏≠‡∏á‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏°‡∏µ‡∏£‡∏≠‡∏¢‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£ ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡∏ï‡∏≠‡∏ö‡πÄ‡∏£‡πá‡∏ß ‡∏™‡πà‡∏á‡πÑ‡∏ß‡∏°‡∏≤‡∏Å ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏ö',
            '‡πÇ‡∏≠‡πÄ‡∏Ñ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ô‡∏µ‡πâ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤ ‡∏™‡∏†‡∏≤‡∏û‡∏û‡∏≠‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏£‡∏±‡∏ö',
            '‡∏û‡∏≠‡πÉ‡∏à‡∏Ñ‡∏£‡∏±‡∏ö ‡∏™‡∏†‡∏≤‡∏û‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏¢‡πÑ‡∏ß‡πâ ‡∏°‡∏µ‡∏ï‡∏≥‡∏´‡∏ô‡∏¥‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏î‡∏µ ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏î‡∏µ ‡∏™‡πà‡∏á‡πÑ‡∏ß ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏£‡∏±‡∏ö',
            '‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤ ‡∏°‡∏µ‡∏£‡∏≠‡∏¢‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏Å ‡πÅ‡∏ï‡πà‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°‡∏û‡∏≠‡πÉ‡∏à ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å ‡∏™‡πà‡∏á‡πÄ‡∏£‡πá‡∏ß ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏£‡∏±‡∏ö'
        ]
    },
    3: {
        titles: [
            '‡∏û‡∏≠‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏ö',
            '‡πÇ‡∏≠‡πÄ‡∏Ñ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ô‡∏µ‡πâ',
            '‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤',
            '‡∏û‡∏≠‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏±‡∏ö',
            '‡πÇ‡∏≠‡πÄ‡∏Ñ‡∏Ñ‡∏£‡∏±‡∏ö ‡πÅ‡∏ï‡πà‡∏°‡∏µ‡∏ï‡∏≥‡∏´‡∏ô‡∏¥'
        ],
        comments: [
            '‡πÑ‡∏î‡πâ‡∏Ç‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö ‡∏™‡∏†‡∏≤‡∏û‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏Å ‡∏°‡∏µ‡∏£‡∏≠‡∏¢‡∏Ñ‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡πÄ‡∏¢‡∏≠‡∏∞‡∏´‡∏ô‡πà‡∏≠‡∏¢ ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ô‡∏µ‡πâ‡πÇ‡∏≠‡πÄ‡∏Ñ ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡∏ï‡∏≠‡∏ö‡∏ä‡πâ‡∏≤‡∏ô‡∏¥‡∏î‡∏´‡∏ô‡πà‡∏≠‡∏¢',
            '‡∏Ç‡∏≠‡∏á‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß ‡∏°‡∏µ‡∏ï‡∏≥‡∏´‡∏ô‡∏¥‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏¥‡∏î ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡∏û‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡πÇ‡∏≠‡πÄ‡∏Ñ ‡∏™‡πà‡∏á‡πÑ‡∏ß‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö',
            '‡∏û‡∏≠‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏™‡∏†‡∏≤‡∏û‡∏û‡∏≠‡πÉ‡∏ä‡πâ ‡∏°‡∏µ‡∏£‡∏≠‡∏¢‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡πÅ‡∏û‡πá‡∏Ñ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤ ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡∏ï‡∏≠‡∏ö‡∏ä‡πâ‡∏≤‡∏´‡∏ô‡πà‡∏≠‡∏¢ ‡πÅ‡∏ï‡πà‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°‡πÇ‡∏≠‡πÄ‡∏Ñ',
            '‡πÇ‡∏≠‡πÄ‡∏Ñ ‡∏°‡∏µ‡∏ï‡∏≥‡∏´‡∏ô‡∏¥‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏´‡∏ô‡πà‡∏≠‡∏¢ ‡πÅ‡∏ï‡πà‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ô‡∏µ‡πâ‡∏û‡∏≠‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏£‡∏±‡∏ö',
            '‡∏û‡∏≠‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏≤‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤ ‡∏°‡∏µ‡∏£‡∏≠‡∏¢‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏¢‡∏≠‡∏∞‡∏´‡∏ô‡πà‡∏≠‡∏¢ ‡πÅ‡∏ï‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏î‡∏µ ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÇ‡∏≠‡πÄ‡∏Ñ'
        ]
    }
};

// Get random item from array
function getRandomItem(arr) {
    return arr[Math.floor(Math.random() * arr.length)];
}

// Generate random rating (weighted towards higher ratings)
function generateRating() {
    const rand = Math.random();
    if (rand < 0.6) return 5; // 60% chance
    if (rand < 0.85) return 4; // 25% chance
    return 3; // 15% chance
}

// Generate sub-ratings based on main rating
function generateSubRatings(mainRating) {
    return {
        communication: mainRating + Math.floor(Math.random() * 2) - (mainRating === 5 ? 0 : 1),
        quality: mainRating,
        shipping: mainRating + Math.floor(Math.random() * 2) - (mainRating === 5 ? 0 : 1)
    };
}

// Main function
async function createReviews() {
    console.log('üîç Finding completed orders without reviews...\n');

    // Get all completed orders that don't have reviews
    const orders = db.prepare(`
        SELECT o.*, oi.product_id, oi.product_title
        FROM orders o
        LEFT JOIN order_items oi ON o.id = oi.order_id
        LEFT JOIN reviews r ON o.id = r.order_id
        WHERE o.status = 'completed'
        AND r.id IS NULL
        ORDER BY o.completed_at DESC
    `).all();

    console.log(`üì¶ Found ${orders.length} completed orders without reviews\n`);

    if (orders.length === 0) {
        console.log('‚úÖ No orders to create reviews for!');
        return;
    }

    let successCount = 0;
    let errorCount = 0;

    // Prepare insert statement
    const insertReview = db.prepare(`
        INSERT INTO reviews (
            id, order_id, reviewer_id, reviewed_user_id, product_id,
            rating, title, comment,
            communication_rating, item_quality_rating, shipping_rating,
            is_verified_purchase, is_visible,
            created_at, updated_at
        ) VALUES (
            ?, ?, ?, ?, ?,
            ?, ?, ?,
            ?, ?, ?,
            1, 1,
            ?, ?
        )
    `);

    // Create reviews for each order
    for (const order of orders) {
        try {
            const rating = generateRating();
            const subRatings = generateSubRatings(rating);
            const template = reviewTemplates[rating];

            const reviewId = `REVIEW_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
            const title = getRandomItem(template.titles);
            const comment = getRandomItem(template.comments);

            // Random date between order completion and now
            const completedDate = new Date(order.completed_at);
            const now = new Date();
            const randomDate = new Date(completedDate.getTime() + Math.random() * (now.getTime() - completedDate.getTime()));

            insertReview.run(
                reviewId,
                order.id,
                order.buyer_id,
                order.seller_id,
                order.product_id,
                rating,
                title,
                comment,
                Math.max(1, Math.min(5, subRatings.communication)),
                Math.max(1, Math.min(5, subRatings.quality)),
                Math.max(1, Math.min(5, subRatings.shipping)),
                randomDate.toISOString(),
                randomDate.toISOString()
            );

            successCount++;
            console.log(`‚úÖ Created review #${successCount}: Order ${order.order_number} - ${rating}‚≠ê - ${title}`);

        } catch (error) {
            errorCount++;
            console.error(`‚ùå Error creating review for order ${order.order_number}:`, error.message);
        }
    }

    console.log('\n' + '='.repeat(60));
    console.log(`‚úÖ Successfully created ${successCount} reviews`);
    if (errorCount > 0) {
        console.log(`‚ùå Failed to create ${errorCount} reviews`);
    }
    console.log('='.repeat(60) + '\n');

    // Verify results
    const totalReviews = db.prepare('SELECT COUNT(*) as count FROM reviews').get();
    console.log(`üìä Total reviews in database: ${totalReviews.count}`);

    // Show rating distribution
    const distribution = db.prepare(`
        SELECT rating, COUNT(*) as count
        FROM reviews
        GROUP BY rating
        ORDER BY rating DESC
    `).all();

    console.log('\nüìà Rating Distribution:');
    distribution.forEach(d => {
        const stars = '‚≠ê'.repeat(d.rating);
        const bar = '‚ñà'.repeat(Math.floor(d.count / 2));
        console.log(`  ${stars} (${d.rating}): ${bar} ${d.count}`);
    });
}

// Run the script
createReviews()
    .then(() => {
        db.close();
        console.log('\n‚úÖ Script completed successfully!');
        process.exit(0);
    })
    .catch((error) => {
        console.error('\n‚ùå Script failed:', error);
        db.close();
        process.exit(1);
    });
